@model DemoGit.Domain.Entities.Usuario
@{
    ViewData["Title"] = "Criar usuário";
}

<h1>Usuário</h1>
<br/>
@using(Html.BeginForm("CreateUser", "Login", FormMethod.Post))
{
    <div class="row">
        @Html.ValidationMessage("ErroCreateUserUsuario", new {style = "color: red;"})
    </div>
    <div class="row">
        <div class="col-6">
            @Html.ValidationMessageFor(u => u.Username, null, new {style="color: red;"})
            <br/>
            @Html.LabelFor(u => u.Username)
            @Html.EditorFor(u => u.Username, new {htmlAttributes = new {@class = "form-control", required = true}})
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            @Html.ValidationMessageFor(u => u.Password, null, new {style="color: red;"})
            <br/>
            @Html.LabelFor(u => u.Password)
            @Html.EditorFor(u => u.Password, new {htmlAttributes = new {@class = "form-control", type = "password", required = true}})
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            @Html.ValidationMessageFor(u => u.Email, null, new {style="color: red;"})
            <br/>
            @Html.LabelFor(u => u.Email)
            @Html.EditorFor(u => u.Email, new {htmlAttributes = new {@class = "form-control", required = true, type = "email"}})
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            @Html.ValidationMessageFor(u => u.FullName, null, new {style="color: red;"})
            <br/>
            @Html.LabelFor(u => u.FullName)
            @Html.EditorFor(u => u.FullName, new {htmlAttributes = new {@class = "form-control", required = true}})
        </div>
    </div>
    <br/>
    <div class="row">
        <div class="col-3">
            <input type="submit" value="Criar" class="btn btn-primary"/>
            <input type="button" class="btn btn-light" value="Voltar" onclick="location.href='@Url.Action("Index", "Login")'" />
        </div>
    </div>
}